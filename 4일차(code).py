어려웠던 부분들
import re

x = input('이메일 입력:')
if re.match('^[a-zA-Z][a-zA-Z0-9+-_.]*@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$', x):
    print('올바른 형식')
else:
    print('잘못된 형식')

정규식에 대해 완벽한 이해가 부족하여 이메일을 입력받았을 때 올바른 형식인지 아닌지 구분하는 코드를 짜는데 어려움이 있었다.

PI = 3.1471412412532534645754754746234523546754785686976976784365324523
r = 3
print(f'파이: {round(PI, 2)}') # {표현내용}에 변수를 입력
print(f'파이: {PI:.2f}') # {표현내용}에 변수를 입력
print(f'반지름이 r인 원의 넓이: {r*r*PI:.3f}') # 반지름이 r인 원의 넓이를 소수점 셋째자리까지 출력해주시고
print(f'반지름이 r인 원의 넓이: {r*r*PI:.0f}') # float이 decimal처럼 출력됩니다(원래 자료형을 거스를 순 없다)
print(f'반지름이 r인 원의 넓이: {r**2*PI}') # r**2 : r의 거듭제곱
print(F'36만원: {360000:,}')# 360000원을 세자리수마다 ,로 끊어서 출력해주세요

PI = 3.1471412412532534645754754746234523546754785686976976784365324523
r = 3
print('파이: {}'.format(round(PI, 2)))# {표현내용}에 변수를 입력
print('파이: {:.2f}'.format(PI)) # {표현내용}에 변수를 입력
print('반지름이 r인 원의 넓이: {:.3f}'.format(r*r*PI)) # 반지름이 r인 원의 넓이를 소수점 셋째자리까지 출력해주시고
print('반지름이 r인 원의 넓이: {:.0f}'.format(r*r*PI)) # float이 decimal처럼 출력됩니다(원래 자료형을 거스를 순 없다)
print('반지름이 r인 원의 넓이: {}'.format(r**2*PI)) # r**2 : r의 거듭제곱
print('36만원: {:,}'.format(360000))# 360000원을 세자리수마다 ,로 끊어서 출력해주세요

두 코드는 format을 쓰고 안 쓰고 차이인데 메소드가 익숙하지 않아서 쓰는데 어려움이 있었다.

이 밖에도 4가지 함수를 자유롭게 다루면서 작동하는 방식의 차이 메모리의 위치 등 여러가지를 새롭게 알아갈 수 있었다.
